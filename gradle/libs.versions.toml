[versions]
agp = "8.7.3"
kotlin = "2.1.0"
coreKtx = "1.15.0"
junit = "4.13.2"
# https://developer.android.com/jetpack/androidx/releases/test
junitVersion = "1.2.1"
espressoCore = "3.6.1"
testCore = "1.6.1"
coroutinesTest = "1.8.1"
lifecycleRuntimeKtx = "2.8.7"
activityCompose = "1.9.3"
composeBom = "2024.12.01"

# Material Icons Extended
# ⚠️ Due to the very large size of this library, make sure to use R8/Proguard to strip unused icons
# https://developer.android.com/reference/kotlin/androidx/compose/material/icons/package-summary
materialIconsExtended = "1.7.6"


# https://github.com/slackhq/circuit/releases
circuit = "0.25.0"

# Kotlin Symbol Processing API
# https://kotlinlang.org/docs/ksp-overview.html
# https://github.com/google/ksp/releases
ksp = "2.1.0-1.0.29"

# Forked Anvil
# https://github.com/ZacSweers/anvil
# Original Anvil - https://github.com/square/anvil
anvil = "0.4.0"

# https://dagger.dev/dev-guide/ksp
dagger = "2.54"

# https://developer.android.com/develop/ui/compose/text/fonts
googleFonts = "1.7.6"

# https://github.com/JakeWharton/timber
timber = "5.0.1"

retrofit = "2.11.0"

# https://developer.android.com/jetpack/androidx/releases/work
workManager = "2.10.0"

dataStore = "1.1.1"

# Android Widgets using Compose
# https://developer.android.com/jetpack/androidx/releases/glance
glance = "1.1.1"

# Http client for Android
# https://square.github.io/okhttp/
okhttp = "4.12.0"

# A modern JSON library for Kotlin and Java.
# https://github.com/square/moshi
moshi = "1.15.2"

# Navigation for Jetpack Compose
navigationCompose = "2.8.5"

# API result type for modeling network API responses.
# https://github.com/slackhq/EitherNet
eithernet = "2.0.0"

# Kotlin linter with built-in formatter
# https://github.com/jeremymailen/kotlinter-gradle
# https://github.com/pinterest/ktlint
kotlinter = "5.0.1"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-test-core = { group = "androidx.test", name = "core", version.ref = "testCore" }
androidx-test-core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "testCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutinesTest" }

# Material Icons Extended
# ⚠️ Due to the very large size of this library, make sure to use R8/Proguard to strip unused icons
# https://developer.android.com/reference/kotlin/androidx/compose/material/icons/package-summary
material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended", version.ref = "materialIconsExtended" }

# Circuit - ⚡️A Compose-driven architecture for Kotlin and Android applications.
# https://github.com/slackhq/circuit/releases
circuit-foundation = { group = "com.slack.circuit", name = "circuit-foundation", version.ref = "circuit" }
circuit-overlay = { group = "com.slack.circuit", name = "circuit-overlay", version.ref = "circuit" }
circuitx-overlays = { group = "com.slack.circuit", name = "circuitx-overlays", version.ref = "circuit" }
circuitx-android = { group = "com.slack.circuit", name = "circuitx-android", version.ref = "circuit" }
circuitx-effects = { group = "com.slack.circuit", name = "circuitx-effects", version.ref = "circuit" }
circuitx-gestureNav = { group = "com.slack.circuit", name = "circuitx-gesture-navigation", version.ref = "circuit" }
circuit-codegen-annotations = { group = "com.slack.circuit", name = "circuit-codegen-annotations", version.ref = "circuit" }
circuit-codegen = { group = "com.slack.circuit", name = "circuit-codegen", version.ref = "circuit" }

dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }

# https://mvnrepository.com/artifact/com.squareup.anvil/annotations-optional
# https://github.com/ZacSweers/anvil/blob/main/FORK.md
anvil-annotations = { group = "dev.zacsweers.anvil", name = "annotations", version.ref = "anvil"}
anvil-annotations-optional = { group = "dev.zacsweers.anvil", name = "annotations-optional", version.ref = "anvil"}


# https://mvnrepository.com/artifact/androidx.compose.ui/ui-text-google-fonts
androidx-ui-text-google-fonts = { group = "androidx.compose.ui", name = "ui-text-google-fonts", version.ref = "googleFonts" }

# https://github.com/JakeWharton/timber
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber"}

retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-mock-server = { group = "com.squareup.retrofit2", name = "retrofit-mock", version.ref = "retrofit" }
retrofit-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
retrofit-converter-moshi = { group = "com.squareup.retrofit2", name = "converter-moshi", version.ref = "retrofit" }


androidx-work-runtime-ktx = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "workManager" }
androidx-work-testing = { group = "androidx.work", name = "work-testing", version.ref = "workManager" }

androidx-datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "dataStore" }
androidx-datastore-core = { group = "androidx.datastore", name = "datastore-core", version.ref = "dataStore" }

androidx-glance = { group = "androidx.glance", name = "glance", version.ref = "glance" }
androidx-glance-appwidget = { group = "androidx.glance", name = "glance-appwidget", version.ref = "glance" }

okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
okhttp-mock-webserver = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "okhttp" }

# A modern JSON library for Kotlin and Java.
# https://github.com/square/moshi
moshi-kotlin = { group = "com.squareup.moshi", name = "moshi-kotlin", version.ref = "moshi" }
moshi-kotlin-codegen = { group = "com.squareup.moshi", name = "moshi-kotlin-codegen", version.ref = "moshi" }

# API result type for modeling network API responses.
# https://github.com/slackhq/EitherNet
eithernet = { group = "com.slack.eithernet", name = "eithernet", version.ref = "eithernet" }
eithernet-integration-retrofit = { group = "com.slack.eithernet", name = "eithernet-integration-retrofit", version.ref = "eithernet" }

robolectric = { group = "org.robolectric", name = "robolectric", version = "4.12.2" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }

# Add @Parcelize support
# https://plugins.gradle.org/plugin/org.jetbrains.kotlin.plugin.parcelize
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}

# Forked Anvil
# https://github.com/ZacSweers/anvil/blob/main/FORK.md
# Original Anvil - https://github.com/square/anvil
anvil = { id = "dev.zacsweers.anvil", version.ref = "anvil" }

# Kotlin linter with built-in formatter
# https://github.com/jeremymailen/kotlinter-gradle
# https://github.com/pinterest/ktlint
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }


